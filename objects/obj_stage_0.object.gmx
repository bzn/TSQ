<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// map size
global.mapLeft = 350;
global.mapRight = 1560;
global.mapUp = 360;
global.mapDown = 1570;

// Special Addon Effect
global.spHeart      = -1;       // (+25% HP)
global.atkPowerUp   = -1;       // (+50% attack power)
global.atkSpeedUp   = -1;       // (+25% attack speed)(timer)
global.spMoveFast   = -1;       // (+25% Move Speed)
global.spBubble     = -1;       // (Bubble)
global.spMagnet     = -1;       // (Magnet Coin)(timer)
global.spMudeki     = -1;       // (MUDEKI)

// player train
global.nowHeroID = 1;
global.playerTrain = instance_create(0, 0, obj_train_player_0);
global.trainSize = 0;

// deki train
global.dekiTrainList = ds_list_create();
dekiTrain = instance_create(0, 0, obj_train_deki_0);
ds_list_add(global.dekiTrainList, dekiTrain);

view_wview[0] = global.deviceW;
view_hview[0] = global.deviceH;
view_wport[0] = global.deviceW;
view_hport[0] = global.deviceH;
view_hborder[0] = global.deviceW*0.5;
view_vborder[0] = global.deviceH*0.5;

//global.pause = true;
stepCounter = 0;

// move control
isListening = false;
isTouching = false;
touchX = -1;
touchY = -1;

// teach box
teachBox = instance_create(0, 0, obj_small_msgbox);
teachBox.depth = -9999999;
teachBox.isActive = false;

fingerLeft = instance_create(0,0, obj_finger_left);
fingerLeft.depth = -99999999;

fingerDown = instance_create(0,0, obj_finger_down);
fingerDown.depth = -99999999;

scr_bgm(snd_stage_1, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!global.pause)
{
    scr_player_attack();    
    stepCounter++;
}

if(stepCounter == 2)
{
    global.pause = true;
    global.playerTrain.char0.bornTimer = 0;
    
    teachBox.isActive = true;
    if(global.language == "chs")
    {
        teachBox.msg1 = "欢迎来到贪食天地！";
        teachBox.msg2 = "画面中央是你所操作的英雄";
    }
    else
    {
        teachBox.msg1 = "歡迎來到貪食天地！";
        teachBox.msg2 = "畫面中央是你所操作的英雄";
    }
    
    if(mouse_check_button_pressed(mb_left))
    {
        global.pause = false;
        teachBox.isActive = false;
    }
}
    
if(stepCounter == 100)
{
    global.pause = true;
    teachBox.isActive = true;
    if(global.language == "chs")
    {
        teachBox.msg1 = "移动英雄，避免撞到四周障碍物！";
        teachBox.msg2 = "向左滑动";
    }
    else
    {
        teachBox.msg1 = "移動英雄，避免撞到四周障礙物！";
        teachBox.msg2 = "向左滑動";
    }
    if(!fingerLeft.isActive)
    {
        fingerLeft.isActive = true;
        fingerLeft.x = view_xview + global.deviceW*0.5 + 150;
        fingerLeft.y = view_yview + global.deviceH*0.5;
        fingerLeft.defaultX = fingerLeft.x;
        fingerLeft.defaultY = fingerLeft.y;
    }    
    
    if(!isTouching &amp;&amp; mouse_check_button_pressed(mb_left))
    {
        isTouching = true;
        touchX = mouse_x;
        touchY = mouse_y;
    }
    
    if(isTouching &amp;&amp; mouse_check_button(mb_left))
    {    
        effectDistance = 40;            // binnkanndo
        xDistance = mouse_x - touchX;
        yDistance = mouse_y - touchY;
        
        if(abs(xDistance) &gt;= effectDistance)
        {
            if(xDistance &lt;= 0)
            {
                global.pause = false;
                teachBox.isActive = false;
                global.playerTrain.char0.command = FACE_L;
                fingerLeft.isActive = false;
            }
        }
    }
    
    if(isTouching &amp;&amp; mouse_check_button_released(mb_left))
    {    
        isCanCommand = false;
    }
}

if(stepCounter == 210)
{  
    global.pause = true;
    teachBox.isActive = true;
    if(global.language == "chs")
    {
        teachBox.msg1 = "寻找地图上的敌人及宝物！";
        teachBox.msg2 = "向下滑动";
    }
    else
    {
        teachBox.msg1 = "尋找地圖上的敵人及寶物！";
        teachBox.msg2 = "向下滑動";
    }
        
    if(!fingerDown.isActive)
    {
        fingerDown.isActive = true;
        fingerDown.x = view_xview + global.deviceW*0.5;
        fingerDown.y = view_yview + global.deviceH*0.5-150;
        fingerDown.defaultX = fingerDown.x;
        fingerDown.defaultY = fingerDown.y;
    }  
    
    if(!isTouching &amp;&amp; mouse_check_button_pressed(mb_left))
    {
        isTouching = true;
        touchX = mouse_x;
        touchY = mouse_y;
    }
    
    if(isTouching &amp;&amp; mouse_check_button(mb_left))
    {    
        effectDistance = 40;            // binnkanndo
        xDistance = mouse_x - touchX;
        yDistance = mouse_y - touchY;
        
        if(abs(yDistance) &gt;= effectDistance)
        {
            if(yDistance &gt;= 0)
            {
                global.pause = false;
                teachBox.isActive = false;
                global.playerTrain.char0.command = FACE_D;
                fingerDown.isActive = false;
            }
        }
    }
    
    if(isTouching &amp;&amp; mouse_check_button_released(mb_left))
    {    
        isCanCommand = false;
    }
}

if(stepCounter == 280)
{  
    global.pause = true;
    teachBox.isActive = true;
    if(global.language == "chs")
    {
        teachBox.msg1 = "发现黄巾贼！快从后方偷袭他";
        teachBox.msg2 = "英雄会自动攻击附近的敌人";
    }
    else
    {
        teachBox.msg1 = "發現黃巾賊！快從後方偷襲他";
        teachBox.msg2 = "英雄會自動攻擊附近的敵人";
    }
    if(mouse_check_button_pressed(mb_left))
    {
        global.pause = false;
        teachBox.isActive = false;
    }
}

if(!instance_exists(dekiTrain.char0))
{
    global.pause = true;
    teachBox.isActive = true;
    if(global.language == "chs")
    {
        teachBox.msg1 = "就是这样！准备出阵吧！";
        teachBox.msg2 = "触碰萤幕继续";    
    }
    else
    {
        teachBox.msg1 = "就是這樣！準備出陣吧！";
        teachBox.msg2 = "觸碰螢幕繼續";    
    }
    if(mouse_check_button_pressed(mb_left))
    {
        global.pause = false;
        global.isTeached = true;
        room_goto(rom_select);
    }
}

if(isTouching &amp;&amp; mouse_check_button_released(mb_left))
{
    isTouching = false;
    touchX = -1;
    touchY = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scr_draw_text(view_xview,view_yview+120,"STEP: "+string(stepCounter),c_white,font20,1,c_black);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
